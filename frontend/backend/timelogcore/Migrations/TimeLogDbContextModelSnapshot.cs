// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using timelogcore.Data;

#nullable disable

namespace timelogcore.Migrations
{
    [DbContext(typeof(TimeLogDbContext))]
    partial class TimeLogDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("timelogcore.Models.TimeLog", b =>
                {
                    b.Property<string>("EmployeeId")
                        .HasColumnType("text")
                        .HasColumnName("employeeid");

                    b.Property<string>("ActivityGroup")
                        .HasColumnType("text")
                        .HasColumnName("activitygroup");

                    b.Property<string>("ActivityType")
                        .HasColumnType("text")
                        .HasColumnName("activitytype");

                    b.Property<string>("AmBusinessCentreForBidSupport")
                        .HasColumnType("text")
                        .HasColumnName("ambusinesscentreforbidsupport");

                    b.Property<string>("AmForBidSupport")
                        .HasColumnType("text")
                        .HasColumnName("amforbidsupport");

                    b.Property<string>("CostCentre")
                        .HasColumnType("text")
                        .HasColumnName("costcentre");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createddate");

                    b.Property<decimal?>("Effort")
                        .HasColumnType("numeric")
                        .HasColumnName("effort");

                    b.Property<string>("EmployeeName")
                        .HasColumnType("text")
                        .HasColumnName("employeename");

                    b.Property<string>("HomeBaseCentre")
                        .HasColumnType("text")
                        .HasColumnName("homebasecentre");

                    b.Property<string>("HomeBaseDivision")
                        .HasColumnType("text")
                        .HasColumnName("homebasedivision");

                    b.Property<string>("HomeBaseTeam")
                        .HasColumnType("text")
                        .HasColumnName("homebaseteam");

                    b.Property<DateTime?>("JoiningDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("joiningdate");

                    b.Property<DateTime?>("LeavingDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("leavingdate");

                    b.Property<string>("Level1")
                        .HasColumnType("text")
                        .HasColumnName("level1");

                    b.Property<string>("Level2")
                        .HasColumnType("text")
                        .HasColumnName("level2");

                    b.Property<DateTime?>("Period")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("period");

                    b.Property<string>("ProjectBaseCentre")
                        .HasColumnType("text")
                        .HasColumnName("projectbasecentre");

                    b.Property<string>("ProjectBaseDivision")
                        .HasColumnType("text")
                        .HasColumnName("projectbasedivision");

                    b.Property<string>("ProjectBaseTeam")
                        .HasColumnType("text")
                        .HasColumnName("projectbaseteam");

                    b.Property<string>("ProjectCode")
                        .HasColumnType("text")
                        .HasColumnName("projectcode");

                    b.Property<string>("ProjectDeliveryLead")
                        .HasColumnType("text")
                        .HasColumnName("projectdeliverylead");

                    b.Property<string>("ProjectDirector")
                        .HasColumnType("text")
                        .HasColumnName("projectdirector");

                    b.Property<string>("ProjectManager")
                        .HasColumnType("text")
                        .HasColumnName("projectmanager");

                    b.Property<string>("ProjectName")
                        .HasColumnType("text")
                        .HasColumnName("projectname");

                    b.Property<decimal?>("ProjectPlannedEffortsInGteledmsOnly")
                        .HasColumnType("numeric")
                        .HasColumnName("projectplannedeffortsingteledmsonly");

                    b.Property<string>("ProjectType")
                        .HasColumnType("text")
                        .HasColumnName("projecttype");

                    b.Property<string>("Remark")
                        .HasColumnType("text")
                        .HasColumnName("remark");

                    b.Property<string>("SvcDelCentre")
                        .HasColumnType("text")
                        .HasColumnName("svcdelcentre");

                    b.Property<string>("TaskName")
                        .HasColumnType("text")
                        .HasColumnName("taskname");

                    b.Property<string>("TaskType")
                        .HasColumnType("text")
                        .HasColumnName("tasktype");

                    b.Property<string>("TaskUniqueId")
                        .HasColumnType("text")
                        .HasColumnName("taskuniqueid");

                    b.Property<DateTime?>("TimeLogDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("timelogdate");

                    b.Property<decimal?>("TotalEffort")
                        .HasColumnType("numeric")
                        .HasColumnName("total_effort");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updatedtime");

                    b.HasKey("EmployeeId");

                    b.ToTable("timelog");
                });
#pragma warning restore 612, 618
        }
    }
}
